name: Deployment Pipeline

on:
  push:
    branches:
      - development

env:
  DOCKER_APP_NAME: my-event
  DOCKER_IMAGE_NAME: ${{ secrets.DOCKER_REGISTRY_USERNAME }}/${{ env.DOCKER_APP_NAME }}

jobs:
  build:
    name: Build and push the Docker image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Login to the Docker registry
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}

      - name: Build and publish the Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ env.DOCKER_IMAGE_NAME }}
          secrets: |
            "NODE_ENV=${{ secrets.NODE_ENV }}"
            "NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL }}"

  deploy:
    name: Deploy the Docker image to the server
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Pull the Docker image on the server and start the container
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            docker pull ${{ env.DOCKER_IMAGE_NAME }}
            docker stop ${{ env.DOCKER_APP_NAME }} || true
            docker image rm $(docker images | grep ${{ env.DOCKER_APP_NAME }} | tail -n +2 | awk '{print $3}' | cut -c 1-3 --output-delimiter=' ') || true
            docker run -d --name ${{ env.DOCKER_APP_NAME }} -p 5000:5000 ${{ env.DOCKER_IMAGE_NAME }}
