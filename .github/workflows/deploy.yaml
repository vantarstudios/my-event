name: Deployment Pipeline

on:
  workflow_run:
    workflows:
      - Pull Request Checks
    branches:
      - development
    types:
      - completed

env:
  REGISTRY: ghcr.io
  DOCKER_APP_NAME: myevent

jobs:
  build:
    name: Build and push the Docker image
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    permissions:
        contents: read
        packages: write
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Login to the GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set the Docker image tag
        run: |
          OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          echo "DOCKER_IMAGE_NAME=${{ env.REGISTRY }}/${OWNER}/${{ env.DOCKER_APP_NAME }}:latest" >> $GITHUB_ENV

      - name: Build and publish the Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ env.DOCKER_IMAGE_NAME }}
          secrets: |
            "NODE_ENV=${{ secrets.NODE_ENV }}"
            "NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL }}"
            "NEXT_PUBLIC_GOOGLE_CLIENT_ID=${{ secrets.NEXT_PUBLIC_GOOGLE_CLIENT_ID }}"
            "NEXT_PUBLIC_GOOGLE_CLIENT_SECRET=${{ secrets.NEXT_PUBLIC_GOOGLE_CLIENT_SECRET }}"

  deploy:
    name: Deploy the Docker image to the server
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set the Docker image tag
        run: |
          OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          echo "DOCKER_IMAGE_NAME=${{ env.REGISTRY }}/${OWNER}/${{ env.DOCKER_APP_NAME }}:latest" >> $GITHUB_ENV

      - name: Pull the Docker image on the server and start the container
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            docker login ${{ env.REGISTRY }} -u ${{ github.repository_owner }} -p ${{ secrets.GITHUB_TOKEN }}
            docker pull ${{ env.DOCKER_IMAGE_NAME }}
            docker stop ${{ env.DOCKER_APP_NAME }} || true
            docker rm ${{ env.DOCKER_APP_NAME }} || true
            docker image rm $(docker images | grep ${{ env.DOCKER_APP_NAME }} | tail -n +2 | awk '{print $3}' | cut -c 1-3 --output-delimiter=' ') || true
            docker run -d --name ${{ env.DOCKER_APP_NAME }} -p 5000:5000 ${{ env.DOCKER_IMAGE_NAME }}
